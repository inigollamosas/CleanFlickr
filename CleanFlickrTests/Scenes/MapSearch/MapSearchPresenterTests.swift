//
//  MapSearchPresenterTests.swift
//  CleanFlickr
//
//  Created by Iñigo on 27/08/2018.
//  Copyright (c) 2018 Iñigo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanFlickr
import XCTest

class MapSearchPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MapSearchPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupMapSearchPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMapSearchPresenter()
  {
    sut = MapSearchPresenter()
  }
  
  // MARK: Test doubles
  
  class MapSearchDisplayLogicSpy: MapSearchDisplayLogic
  {
    var displayFetchedPhotosCalled = false
    
    var viewModel: MapSearch.FetchPhotos.ViewModel!
    
    func displayFetchedPhotos(viewModel: MapSearch.FetchPhotos.ViewModel)
    {
      displayFetchedPhotosCalled = true
      self.viewModel = viewModel
    }
  }
  
  // MARK: Tests
  
  func testPresentFetchedPhotosShouldAskViewControllerToDisplayFetchedPhotos()
  {
    // Given
    let spy = MapSearchDisplayLogicSpy()
    sut.viewController = spy
    
    // When
    let photos = [Seeds.Photos.photo1, Seeds.Photos.photo2, Seeds.Photos.photo3]
    let response = MapSearch.FetchPhotos.Response(photos: photos)
    sut.presentFetchedPhotos(response: response)
    
    // Then
    XCTAssert(spy.displayFetchedPhotosCalled, "Presenting fetched photos should ask view controller to display them")
  }
}
