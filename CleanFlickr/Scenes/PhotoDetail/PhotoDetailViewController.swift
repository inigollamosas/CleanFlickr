//
//  PhotoDetailViewController.swift
//  CleanFlickr
//
//  Created by Iñigo on 26/08/2018.
//  Copyright (c) 2018 Iñigo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PhotoDetailDisplayLogic: class
{
  func displayPhoto(viewModel: PhotoDetail.GetPhoto.ViewModel)
}

class PhotoDetailViewController: UIViewController, PhotoDetailDisplayLogic
{
  var interactor: PhotoDetailBusinessLogic?
  var router: (NSObjectProtocol & PhotoDetailRoutingLogic & PhotoDetailDataPassing)?

  @IBOutlet weak var displayedPhoto: UIImageView!
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PhotoDetailInteractor()
    let presenter = PhotoDetailPresenter()
    let router = PhotoDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }

  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    getPhoto()
  }

  func getPhoto()
  {
    let request = PhotoDetail.GetPhoto.Request()
    interactor?.getPhoto(request: request)
  }
  
  func displayPhoto(viewModel: PhotoDetail.GetPhoto.ViewModel)
  {
    self.displayedPhoto.image = viewModel.displayedPhoto.image
  }
}
